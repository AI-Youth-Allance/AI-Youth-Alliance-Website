name: Deploy to Hosting

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # Step 3: Install PHP dependencies
      - name: Install dependencies
        run: composer install

      # Step 4: Create Backup
      - name: Create Backup in Repository
        run: |
          # Create a temporary directory for safe backup
          BACKUP_DIR=$(mktemp -d)
          
          # Use rsync to copy all files except excluded ones
          rsync -av --exclude='.git' --exclude='vendor/' --exclude='node_modules/' --exclude='backup/' ./ "$BACKUP_DIR/"

          # Create the backup folder if not exists
          mkdir -p backup
          
          # Archive the backup and place it in the backup folder
          tar -czvf backup/backup.tar.gz -C "$BACKUP_DIR" .

          # Clean up temporary directory
          rm -rf "$BACKUP_DIR"

      # Step 5: Commit Backup to Repository
      - name: Commit Backup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backup/
          git commit -m "Backup before deployment"
          git push

      # Step 6: Deploy to FTP Server (Preserve Existing Files)
      - name: Deploy to FTP server
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./  # Upload all files from the current directory
          exclude: |
            backup/
            .git/
            vendor/
            node_modules/
          delete: false  # Ensure existing server files not in the repo remain intact
