name: Deploy PHP Project with Backup

on:
  push:
    branches:
      - deploy  # Trigger the workflow only when there's a push to the 'deploy' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # Step 3: Install PHP dependencies
      - name: Install dependencies
        run: |
          composer install --no-dev --optimize-autoloader

      # Step 4: Backup current repository files
      - name: Create Backup in Repository
        run: |
          BACKUP_DIR=$(mktemp -d)  # Create a temporary directory
          
          # Use rsync to copy all files except excluded ones
          rsync -av --exclude='.git' --exclude='vendor/' --exclude='node_modules/' --exclude='backup/' ./ "$BACKUP_DIR/"

          # Create the backup directory if it doesn't exist
          mkdir -p backup
          
          # Archive the backup into the `backup` folder
          tar -czvf backup/backup.tar.gz -C "$BACKUP_DIR" .

          # Clean up temporary directory
          rm -rf "$BACKUP_DIR"

      # Step 5: Commit the backup to the repository
      - name: Commit Backup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backup/
          git commit -m "Backup before deployment"
          git push

      # Step 6: Deploy to FTP Server
      - name: Deploy to FTP server
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}         # FTP server address
          username: ${{ secrets.FTP_USERNAME }}     # FTP username
          password: ${{ secrets.FTP_PASSWORD }}     # FTP password
          local-dir: ./                             # Directory to upload
          exclude: |                                # Exclude unnecessary files and folders
            node_modules/
            vendor/
            tests/
            *.backup
            *.log
            composer.json
            composer.lock
          delete: false                             # Preserve existing files on the server
